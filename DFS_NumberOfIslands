 class Solution {
public:
void dfs(vector<vector<char>>& grid,int p,int q)
{
    while (p >= 0 && q >= 0 && p < grid.size() && q < grid[0].size() && grid[p][q] == '1')

    {
        grid[p][q]=2;
        dfs(grid,p-1,q);
        dfs(grid,p,q-1);
        dfs(grid,p+1,q);
        dfs(grid,p,q+1);
        
    }

}
    int numIslands(vector<vector<char>>& grid) {
        int count=0;
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[i].size();j++)
            {
                
               if(grid[i][j]== '1')
               {
                 count++;
                 dfs(grid,i,j);

               }
                
            }
        }
        return count;
        
    }
};
